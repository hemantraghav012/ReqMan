package com.reqman.pojo;

// Generated 5 Sep, 2017 6:45:26 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Userfriendlist generated by hbm2java
 */
@Entity
@Table(name = "userfriendlist")
public class Userfriendlist implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7672874640318531848L;
	private int id;
	private Users usersByUserid;
	private Users usersByFriendid;
	private Boolean status;
	private Date datecreated;
	private String createdby;
	private Set<Requestworkflow> requestworkflows = new HashSet<Requestworkflow>(
			0);

	public Userfriendlist() {
	}

	public Userfriendlist(int id) {
		this.id = id;
	}

	public Userfriendlist(int id, Users usersByUserid, Users usersByFriendid,
			Boolean status, Date datecreated, String createdby,
			Set<Requestworkflow> requestworkflows) {
		this.id = id;
		this.usersByUserid = usersByUserid;
		this.usersByFriendid = usersByFriendid;
		this.status = status;
		this.datecreated = datecreated;
		this.createdby = createdby;
		this.requestworkflows = requestworkflows;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid")
	public Users getUsersByUserid() {
		return this.usersByUserid;
	}

	public void setUsersByUserid(Users usersByUserid) {
		this.usersByUserid = usersByUserid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "friendid")
	public Users getUsersByFriendid() {
		return this.usersByFriendid;
	}

	public void setUsersByFriendid(Users usersByFriendid) {
		this.usersByFriendid = usersByFriendid;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datecreated", length = 29)
	public Date getDatecreated() {
		return this.datecreated;
	}

	public void setDatecreated(Date datecreated) {
		this.datecreated = datecreated;
	}

	@Column(name = "createdby", length = 50)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userfriendlist")
	public Set<Requestworkflow> getRequestworkflows() {
		return this.requestworkflows;
	}

	public void setRequestworkflows(Set<Requestworkflow> requestworkflows) {
		this.requestworkflows = requestworkflows;
	}

}
