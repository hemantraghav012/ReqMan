package com.reqman.pojo;

// Generated 14 Aug, 2017 12:03:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", uniqueConstraints = @UniqueConstraint(columnNames = "emailid"))
public class Users implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2189653975926055580L;
	private int id;
	private String emailid;
	private String password;
	private String firstname;
	private String lastname;
	private String shortname;
	private Boolean status;
	private String createdby;
	private Date createdon;
	private Date lastlogin;
	private byte[] photo;
	private Set<Userroles> userroleses = new HashSet<Userroles>(0);
	private Userfriendlist userfriendlist;
	private Set<Userusertype> userusertypes = new HashSet<Userusertype>(0);

	public Users() {
	}

	public Users(int id) {
		this.id = id;
	}

	public Users(int id, String emailid, String password, String firstname,
			String lastname, String shortname, Boolean status,
			String createdby, Date createdon, Date lastlogin, byte[] photo,
			Set<Userroles> userroleses, Userfriendlist userfriendlist,
			Set<Userusertype> userusertypes) {
		this.id = id;
		this.emailid = emailid;
		this.password = password;
		this.firstname = firstname;
		this.lastname = lastname;
		this.shortname = shortname;
		this.status = status;
		this.createdby = createdby;
		this.createdon = createdon;
		this.lastlogin = lastlogin;
		this.photo = photo;
		this.userroleses = userroleses;
		this.userfriendlist = userfriendlist;
		this.userusertypes = userusertypes;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "emailid", unique = true, length = 100)
	public String getEmailid() {
		return this.emailid;
	}

	public void setEmailid(String emailid) {
		this.emailid = emailid;
	}

	@Column(name = "password", length = 12)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "firstname", length = 50)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname", length = 50)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "shortname", length = 100)
	public String getShortname() {
		return this.shortname;
	}

	public void setShortname(String shortname) {
		this.shortname = shortname;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Column(name = "createdby", length = 50)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdon", length = 29)
	public Date getCreatedon() {
		return this.createdon;
	}

	public void setCreatedon(Date createdon) {
		this.createdon = createdon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastlogin", length = 29)
	public Date getLastlogin() {
		return this.lastlogin;
	}

	public void setLastlogin(Date lastlogin) {
		this.lastlogin = lastlogin;
	}

	@Column(name = "photo")
	public byte[] getPhoto() {
		return this.photo;
	}

	public void setPhoto(byte[] photo) {
		this.photo = photo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Userroles> getUserroleses() {
		return this.userroleses;
	}

	public void setUserroleses(Set<Userroles> userroleses) {
		this.userroleses = userroleses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "users")
	public Userfriendlist getUserfriendlist() {
		return this.userfriendlist;
	}

	public void setUserfriendlist(Userfriendlist userfriendlist) {
		this.userfriendlist = userfriendlist;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Userusertype> getUserusertypes() {
		return this.userusertypes;
	}

	public void setUserusertypes(Set<Userusertype> userusertypes) {
		this.userusertypes = userusertypes;
	}


	



	
	
	
	
}
