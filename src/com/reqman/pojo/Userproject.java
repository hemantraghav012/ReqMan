package com.reqman.pojo;

// Generated 26 Aug, 2017 12:28:54 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Userproject generated by hbm2java
 */
@Entity
@Table(name = "userproject", uniqueConstraints = @UniqueConstraint(columnNames = {
		"userid", "projectid" }))
public class Userproject implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3423347316748901779L;
	private int id;
	private Project project;
	private Users users;
	private Boolean status;
	private Set<Request> requests = new HashSet<Request>(0);

	public Userproject() {
	}

	public Userproject(int id) {
		this.id = id;
	}

	public Userproject(int id, Project project, Users users, Boolean status,
			Set<Request> requests) {
		this.id = id;
		this.project = project;
		this.users = users;
		this.status = status;
		this.requests = requests;
	}

	@Id
	 @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projectid")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userproject")
	public Set<Request> getRequests() {
		return this.requests;
	}

	public void setRequests(Set<Request> requests) {
		this.requests = requests;
	}

}
